openapi: 3.0.4
info:
  title: API First with Spring Boot
  description: |-
    This is a **example** to demonstrate features of OpenAPI specification.

    Using DDD, hexagonal.
  contact:
    email: edu_ce_1988@hotmail.com
    url: https://www.linkedin.com/in/ecristobale
  version: 1.0.0

tags:
  - name: greetings
    description: Simple greetings actions
  - name: Customer
    description: Customer operations
  - name: Product
    description: Product operations
  - name: Order
    description: Order operations
paths:
#  /v1/customers: # hace que no se genere target: runtime swagger deserializer
#    $ref: paths/v1/customers.yaml
#  /v1/customers/{customerId}: # no genera nada pero no hace que falle
#    $ref: paths/v1/customers_{customerId}.yaml
#  /v1/products: # hace que no se genere target
#    $ref: paths/v1/products.yaml
#  /v1/products/{productId}: # no genera nada pero no hace que falle
#    $ref: paths/v1/products_{productId}.yaml
#  /v1/orders: # hace que no se genere target: runtime swagger deserializer
#    $ref: paths/v1/orders.yaml
#  /v1/orders/{orderId}: # no genera nada pero no hace que falle
#    $ref: paths/v1/orders_{orderId}.yaml
#  /v1/categories:
#    $ref: paths/v1/categories.yaml
  /greetings:
    get:
      tags:
        - greetings
      summary: Get greetings summary
      description: Get greetings description
      operationId: getGreetings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greetings'
        '404':
          description: No greetings found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingNotFoundError'
security:
  - basic_auth: []
components:
  schemas:
    Greetings:
      type: object
      properties:
        hi:
          type: string
    GreetingNotFoundError:
      type: object
      properties:
        message:
          type: string
    customer_list:
      type: array
      items:
        $ref: '#/components/schemas/customer'
    customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: unique identifier of the customer
          readOnly: true
        name:
          $ref: '#/components/schemas/name'
        shipToAddress:
          $ref: '#/components/schemas/address'
        billToAddress:
          $ref: '#/components/schemas/address'
        email:
          type: string # Open API 3.1: [string, 'null']
          nullable: true
          maxLength: 255
          minLength: 5
          example: edu_ce_1988@hotmail.com
        phone:
          type: string
          nullable: true
          maxLength: 15
          minLength: 7
          example: 123-45-67-89
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/payment_method'
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - name
        - shipToAddress
        - billToAddress
    customer_patch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier representing a specific customer
          readOnly: true
          nullable: true
        name:
          $ref: '#/components/schemas/customer_name_patch'
        shipToAddress:
          $ref: '#/components/schemas/customer_address_patch'
        billToAddress:
          $ref: '#/components/schemas/customer_address_patch'
        email:
          type: string
          maxLength: 255
          minLength: 3
          example: ecristobale@ecristobale.es
          nullable: true
        phone:
          type: string
          maxLength: 15
          minLength: 7
          example: 800-555-1212
          nullable: true
        paymentMethods:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/customer_payment_method_patch'
    name:
      type: object
      properties:
        prefix:
          type: string
          nullable: true
          description: Name prefix
          minLength: 0
          maxLength: 25
          example: Mr.
        firstName:
          type: string
          description: First Name
          minLength: 2
          maxLength: 100
          example: John
        lastName:
          type: string
          description: Last Name
          minLength: 2
          maxLength: 100
          example: Doe
        suffix:
          type: string
          nullable: true
          description: Name suffix
          minLength: 0
          maxLength: 25
      required:
        - firstName
        - lastName
    customer_name_patch:
      type: object
      properties:
        prefix:
          type: string
          description: Name Prefix
          minLength: 0
          maxLength: 25
          example: Mr.
          nullable: true
        firstName:
          type: string
          description: First Name
          minLength: 2
          maxLength: 100
          example: John
          nullable: true
        lastName:
          type: string
          description: Last Name
          minLength: 2
          maxLength: 100
          example: Ecristobale
          nullable: true
        suffix:
          type: string
          description: Name Suffix
          minLength: 0
          maxLength: 25
          nullable: true
    address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the address
          readOnly: true
        addressLine1:
          type: string
          description: Address line 1
          minLength: 3
          maxLength: 100
          example: 123 Main Street
        addressLine2:
          type: string
          nullable: true
          description: Address line 2
          minLength: 3
          maxLength: 100
        city:
          type: string
          description: City
          minLength: 2
          maxLength: 100
          example: Springfield
        state:
          type: string
          description: 2 characters state code
          minLength: 2
          maxLength: 2
          example: CA
        zip:
          type: string
          description: Zip Code
          minLength: 5
          maxLength: 10
          example: 12345
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - addressLine1
        - city
        - state
        - zip
    customer_address_patch:
      type: object
      nullable: true
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier representing a specific customer address
        addressLine1:
          type: string
          description: Address Line 1
          minLength: 3
          maxLength: 100
          example: 123 Main Street
          nullable: true
        addressLine2:
          type: string
          description: Address Line 2
          minLength: 3
          maxLength: 100
          nullable: true
        city:
          type: string
          description: City
          minLength: 2
          maxLength: 100
          example: St Petersburg
          nullable: true
        state:
          type: string
          description: 2 character state code
          minLength: 2
          maxLength: 2
          example: FL
          nullable: true
        zip:
          type: string
          description: Zip Code
          minLength: 5
          maxLength: 10
          example: 33701
          nullable: true
      required:
        - id
    payment_method:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the payment method
          readOnly: true
        displayName:
          type: string
          description: Display name of the payment method
          minLength: 2
          maxLength: 100
          example: My Credit Card
        cardNumber:
          type: integer
          description: Card number of the payment method
          example: 1234567890123456
        expiryMonth:
          type: integer
          description: Expiry month of the payment method
          example: 12
        expiryYear:
          type: integer
          description: Expiry year of the payment method
          example: 25
        cvv:
          type: integer
          description: CVV of the payment method
          example: 123
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - displayName
        - cardNumber
        - expiryMonth
        - expiryYear
        - cvv
    customer_payment_method_patch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier representing a specific payment method.
        displayName:
          type: string
          minLength: 2
          maxLength: 100
          example: My Chase Card
          nullable: true
        cardNumber:
          type: integer
          example: 1234567890123456
          nullable: true
        expiryMonth:
          type: integer
          example: 7
          nullable: true
        expiryYear:
          type: integer
          example: 26
          nullable: true
        cvv:
          type: integer
          example: 123
          nullable: true
      required:
        - id
    product:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          nullable: true
          format: uuid
          description: The unique identifier of the product
        description:
          type: string
          description: The description of the product
          minLength: 3
          maxLength: 255
        dimensions:
          $ref: '#/components/schemas/dimensions'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/category'
        images:
          type: array
          items:
            $ref: '#/components/schemas/image'
        price:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
        cost:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - description
        - price
    product_create:
      type: object
      properties:
        description:
          type: string
          description: The description of the product
          minLength: 3
          maxLength: 255
        dimensions:
          $ref: '#/components/schemas/dimensions'
        categories:
          type: array
          description: The categories of the product
          items:
            type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/image'
        price:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
        cost:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
      required:
        - description
        - price
    product_update:
      type: object
      properties:
        description:
          type: string
          description: The description of the product
          minLength: 3
          maxLength: 255
        dimensions:
          $ref: '#/components/schemas/dimensions'
        categories:
          type: array
          description: The categories of the product
          items:
            type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/product_image_update'
        price:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
        cost:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
      required:
        - description
        - price
    product_patch:
      type: object
      properties:
        description:
          type: string
          description: The description of the product
          minLength: 3
          maxLength: 255
          nullable: true
        dimensions:
          $ref: '#/components/schemas/product_dimensions_patch'
        categories:
          type: array
          description: The categories of the product
          items:
            type: string
          nullable: true
        images:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/product_image_patch'
        price:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
          nullable: true
        cost:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
          nullable: true
    dimensions:
      type: object
      properties:
        length:
          type: integer # number for BigDecimal
          description: The length of the product
          minimum: 1
          maximum: 999
          example: 10
        width:
          type: integer # number for BigDecimal
          description: The width of the product
          minimum: 1
          maximum: 999
          example: 10
        height:
          type: integer # number for BigDecimal
          description: The height of the product
          minimum: 1
          maximum: 999
          example: 10
      description: The dimentions of the product
      required:
        - length
        - width
        - height
    product_dimensions_patch:
      type: object
      properties:
        length:
          type: integer # number for BigDecimal
          description: The length of the product
          minimum: 1
          maximum: 999
          example: 10
          nullable: true
        width:
          type: integer # number for BigDecimal
          description: The width of the product
          minimum: 1
          maximum: 999
          example: 10
          nullable: true
        height:
          type: integer # number for BigDecimal
          description: The height of the product
          minimum: 1
          maximum: 999
          example: 10
          nullable: true
      description: The dimentions of the product
    category_list:
      type: array
      items:
        $ref: '#/components/schemas/category'
    category:
      type: object
      properties:
        id:
          type: string
          nullable: true
          format: uuid
          description: The unique identifier of the category
          readOnly: true
        category:
          type: string
          description: The category of the product
          minLength: 3
          maxLength: 25
          example: Electronics
        description:
          type: string
          description: The description of the category
          minLength: 3
          maxLength: 255
          example: Electronics and gadgets
        categoryCode:
          type: string
          description: Category code of the product
          minLength: 3
          maxLength: 25
          example: ELECTRONICS
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - category
        - description
        - category_code
    image:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the image
          readOnly: true
          nullable: true
        url:
          type: string
          format: url
          description: The url of the image
          minLength: 5
          maxLength: 500
          example: https://raw.githubusercontent.com/ecristobale/apifirst-spring-boot/refs/heads/main/DDD%20design/Entidad%20Customer%20Programacion%20con%20Value%20Objects%20y%20objetos.png
        altText:
          type: string
          nullable: true
          minLength: 3
          maxLength: 255
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - url
    product_image_update:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the image
        url:
          type: string
          format: url
          description: The url of the image
          minLength: 5
          maxLength: 500
          example: https://raw.githubusercontent.com/ecristobale/apifirst-spring-boot/refs/heads/main/DDD%20design/Entidad%20Customer%20Programacion%20con%20Value%20Objects%20y%20objetos.png
        altText:
          type: string
          nullable: true
          minLength: 3
          maxLength: 255
      required:
        - url
        - id
    product_image_patch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the image
        url:
          type: string
          format: url
          description: The url of the image
          minLength: 5
          maxLength: 500
          nullable: true
          example: https://raw.githubusercontent.com/ecristobale/apifirst-spring-boot/refs/heads/main/DDD%20design/Entidad%20Customer%20Programacion%20con%20Value%20Objects%20y%20objetos.png
        altText:
          type: string
          nullable: true
          minLength: 3
          maxLength: 255
      required:
        - id
    order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: unique identifier of the order
          readOnly: true
        customer:
          $ref: '#/components/schemas/order_customer'
        orderStatus:
          type: string
          enum: [NEW, HOLD, SHIPPED, DELIVERED, CLOSED]
          default: NEW
        shipmentInfo:
          type: string
          minLength: 1
          maxLength: 255
          nullable: true
        orderLines:
          type: array
          items:
            $ref: '#/components/schemas/order_line'
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - customer
        - orderLines
        - orderStatus
    order_customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: unique identifier of the customer
        name:
          $ref: '#/components/schemas/name'
        shipToAddress:
          $ref: '#/components/schemas/address'
        billToAddress:
          $ref: '#/components/schemas/address'
        email:
          type: string
          description: The email address of the customer
          example: edu_ce_1988@hotmail.com
        phone:
          type: string
          description: The phone number of the customer
          example: 123-45-67-89
        selected_payment_method:
          $ref: '#/components/schemas/payment_method'
    order_line:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the order line
          readOnly: true
        product:
          $ref: '#/components/schemas/order_product'
        orderQuantity:
          type: integer # number for BigDecimal
          description: The quantity of the product in the order
          minimum: 1
          maximum: 10000
          example: 10
        shipQuantity:
          type: integer # number for BigDecimal
          description: The quantity of the product shipped
          minimum: 1
          maximum: 10000
          nullable: true
          example: 10
        dateCreated:
          $ref: '#/components/schemas/iso_timestamp'
        dateUpdated:
          $ref: '#/components/schemas/iso_timestamp'
      required:
        - product
        - orderQuantity
    order_product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the product
        description:
          type: string
          description: The description of the product
        price:
          type: string
          pattern: ^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$
    order_create:
      type: object
      properties:
        customerId:
          type: string
          format: uuid
        selectPaymentMethodId:
          type: string
          format: uuid
          nullable: true
        orderLines:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/order_line_create'
          description: The order lines of the order
      required:
        - customerId
    order_update:
      type: object
      properties:
        customerId:
          type: string
          format: uuid
        selectPaymentMethodId:
          type: string
          format: uuid
          nullable: true
        orderLines:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/order_line_update'
          description: The order lines of the order
      required:
        - customerId
    order_line_create:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        orderQuantity:
          type: integer # number for BigDecimal
          format: int32
          minimum: 1
          maximum: 1000
          example: 10
      required:
        - productId
        - orderQuantity
    order_line_update:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the order line
        productId:
          type: string
          format: uuid
        orderQuantity:
          type: integer # number for BigDecimal
          format: int32
          minimum: 1
          maximum: 1000
          example: 10
      required:
        - id
        - productId
        - orderQuantity
    iso_timestamp:
      type: string
      format: date-time
      description: ISO 8601 Timestamp. Date Created and Date Updated are system managed values,
        should not be sent in request payloads - will be ignored.
      example: 2022-08-22T11:43:06-07:00
      title: ISO Timestamp
      readOnly: true
      nullable: true